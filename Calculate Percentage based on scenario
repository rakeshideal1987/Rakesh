package com.java;

import java.util.HashSet;
import java.util.Set;

class Exam {
    public int solution(String[] T, String[] R) {
    	int pass = 0;
    	int countOK = 0;
    	int K =0;
    	Set<Integer> set = new HashSet<Integer>();
    	Set<Integer> setOK = new HashSet<Integer>();
    	for(int i=0; i<T.length; i++){
    		if(R[i].equalsIgnoreCase("OK")){
		//Scope to refector this block of code and can be move to a private method to resure
        			for (int f=0; f < T[i].length(); f++) {
    	    			char c = T[i].charAt(f);
    				    if (Character.isDigit(c)){
    				    	setOK.add(Character.getNumericValue(c));
    				    }
        		}
    		}
    	}
    		for(int j =0; j<T.length; j++){
    			for (int f=0; f < T[j].length(); f++) {
	    			char c = T[j].charAt(f);
				    if (Character.isDigit(c)){
				    	set.add(Character.getNumericValue(c));
				    }
    			}
    		}
    		for(int sOk : setOK){
    			countOK+=1;
    		}
    		for(int s : set){
    			K=+1;
    		}
    		pass = 100/K*countOK;
    	
    	return pass;
     }

	public static void main(String are[]){
    	
    	String[] T = {"Test1a","Test1b","Test2","Test3"};
    	String[] R = {"OK","OK","Error","Warning"};
    	Exam e = new Exam();
    	int p = e.solution(T,R);
    	System.out.println("p:"+p);
    }
}
